generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model WorkWith {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  typeWork      String
  email         String
  tel           String
  detail        String
  createdBy     String
  createdAt     DateTime        @default(now())
  updatedBy     String?
  updatedAt     DateTime        @updatedAt
  deletedBy     String?
  deletedAt     DateTime?       @map("deleted_at")
  deleted       Boolean         @default(false)
  WorkWithSkill WorkWithSkill[]
  AuditLog      AuditLog[]
}

model Skill {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  createdBy     String
  createdAt     DateTime        @default(now())
  updatedBy     String?
  updatedAt     DateTime        @updatedAt
  deletedBy     String?
  deletedAt     DateTime?       @map("deleted_at")
  deleted       Boolean         @default(false)
  WorkWithSkill WorkWithSkill[]
  MemberSkill   MemberSkill[]
  AuditLog      AuditLog[]
}

model MemberSkill {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  createdBy String
  createdAt DateTime   @default(now())
  updatedBy String?
  updatedAt DateTime   @updatedAt
  deletedBy String?
  deletedAt DateTime?  @map("deleted_at")
  deleted   Boolean    @default(false)
  Member    Member?    @relation(fields: [memberId], references: [id])
  memberId  String?    @db.ObjectId
  Skill     Skill?     @relation(fields: [skillId], references: [id])
  skillId   String?    @db.ObjectId
  AuditLog  AuditLog[]
}

model WorkWithSkill {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  createdBy  String
  createdAt  DateTime   @default(now())
  updatedBy  String?
  updatedAt  DateTime   @updatedAt
  deletedBy  String?
  deletedAt  DateTime?  @map("deleted_at")
  deleted    Boolean    @default(false)
  WorkWith   WorkWith?  @relation(fields: [workWithId], references: [id])
  workWithId String?    @db.ObjectId
  Skill      Skill?     @relation(fields: [skillId], references: [id])
  skillId    String?    @db.ObjectId
  AuditLog   AuditLog[]
}

model Contact {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String
  tel       String
  detail    String
  createdBy String
  createdAt DateTime   @default(now())
  updatedBy String?
  updatedAt DateTime   @updatedAt
  deletedBy String?
  deletedAt DateTime?  @map("deleted_at")
  deleted   Boolean    @default(false)
  AuditLog  AuditLog[]
}

model Blog {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  subTitle    String
  subDetail   String
  detailOne   String
  detailTwo   String
  detailThree String
  listOne     String
  listTwo     String
  listThree   String
  start       DateTime
  end         DateTime
  createdBy   String
  createdAt   DateTime   @default(now())
  updatedBy   String?
  updatedAt   DateTime   @updatedAt
  deletedBy   String?
  deletedAt   DateTime?  @map("deleted_at")
  deleted     Boolean    @default(false)
  Gallery     Gallery[]
  AuditLog    AuditLog[]
}

model OurWork {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  subTitle    String
  subDetail   String
  detailOne   String
  detailTwo   String
  detailThree String
  listOne     String
  listTwo     String
  listThree   String
  start       DateTime
  end         DateTime
  createdBy   String
  createdAt   DateTime   @default(now())
  updatedBy   String?
  updatedAt   DateTime   @updatedAt
  deletedBy   String?
  deletedAt   DateTime?  @map("deleted_at")
  deleted     Boolean    @default(false)
  Gallery     Gallery[]
  AuditLog    AuditLog[]
}

model News {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  subTitle    String
  subDetail   String
  detailOne   String
  detailTwo   String
  detailThree String
  listOne     String
  listTwo     String
  listThree   String
  start       DateTime
  end         DateTime
  createdBy   String
  createdAt   DateTime   @default(now())
  updatedBy   String
  updatedAt   DateTime   @updatedAt
  deletedBy   String?
  deletedAt   DateTime?  @map("deleted_at")
  deleted     Boolean    @default(false)
  Gallery     Gallery[]
  AuditLog    AuditLog[]
}

model WebVisitor {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  volume    String
  createdBy String
  createdAt DateTime  @default(now())
  updatedBy String?
  updatedAt DateTime  @updatedAt
  deletedBy String?
  deletedAt DateTime? @map("deleted_at")
  deleted   Boolean   @default(false)
}

model Permission {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  page      String
  manager   String
  createdBy String
  createdAt DateTime   @default(now())
  updatedBy String?
  updatedAt DateTime   @updatedAt
  deletedBy String?
  deletedAt DateTime?  @map("deleted_at")
  deleted   Boolean    @default(false)
  Role      Role[]
  AuditLog  AuditLog[]
}

model Role {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  createdBy    String
  createdAt    DateTime    @default(now())
  updatedBy    String?
  updatedAt    DateTime    @updatedAt
  deletedBy    String?
  deletedAt    DateTime?   @map("deleted_at")
  deleted      Boolean     @default(false)
  Permission   Permission? @relation(fields: [permissionId], references: [id])
  permissionId String?     @db.ObjectId
  Member       Member[]
  AuditLog     AuditLog[]
}

model Member {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  username    String
  password    String
  firstname   String
  lastname    String
  facebook    String
  line        String
  instagram   String
  addressOne  String
  addressTwo  String
  subDistrict String
  district    String
  city        String
  postalCode  String
  createdBy   String
  createdAt   DateTime      @default(now())
  updatedBy   String?
  updatedAt   DateTime      @updatedAt
  deletedBy   String?
  deletedAt   DateTime?     @map("deleted_at")
  deleted     Boolean       @default(false)
  Position    Position?     @relation(fields: [positionId], references: [id])
  positionId  String?       @db.ObjectId
  Role        Role?         @relation(fields: [roleId], references: [id])
  roleId      String?       @db.ObjectId
  Gallery     Gallery[]
  MemberSkill MemberSkill[]
  AuditLog    AuditLog[]
}

model PackagePrice {
  id              String     @id @default(auto()) @map("_id") @db.ObjectId
  title           String
  price           String
  typeService     String
  detailListOne   String
  detailListTwo   String
  detailListThree String
  createdBy       String
  createdAt       DateTime   @default(now())
  updatedBy       String?
  updatedAt       DateTime   @updatedAt
  deletedBy       String?
  deletedAt       DateTime?  @map("deleted_at")
  AuditLog        AuditLog[]
}

model Service {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  price      String
  detail     String
  detailList String
  createdBy  String
  createdAt  DateTime  @default(now())
  updatedBy  String?
  updatedAt  DateTime  @updatedAt
  deletedBy  String?
  deletedAt  DateTime? @map("deleted_at")
  deleted    Boolean   @default(false)
  Gallery    Gallery[]
}

model Setting {
  id                String     @id @default(auto()) @map("_id") @db.ObjectId
  businessName      String
  facebook          String
  intragarm         String
  line              String
  tel               String
  addressOne        String
  addressTwo        String
  subDistrict       String
  district          String
  city              String
  postalCode        String
  location          String
  aboutTitile       String
  aboutSubTitle     String
  aboutDetailOne    String
  aboutSubDetailOne String
  aboutDetailTwo    String
  aboutSubDetailTwo String
  createdBy         String
  createdAt         DateTime   @default(now())
  updatedBy         String?
  updatedAt         DateTime   @updatedAt
  deletedBy         String?
  deletedAt         DateTime?  @map("deleted_at")
  deleted           Boolean    @default(false)
  Gallery           Gallery[]
  AuditLog          AuditLog[]
}

model AuditLog {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  code            String
  dataOld         String
  dataNew         String
  createdBy       String
  createdAt       DateTime       @default(now())
  updatedBy       String?
  updatedAt       DateTime       @updatedAt
  deletedBy       String?
  deletedAt       DateTime?      @map("deleted_at")
  deleted         Boolean        @default(false)
  Contact         Contact?       @relation(fields: [contactId], references: [id])
  contactId       String?        @db.ObjectId
  Skill           Skill?         @relation(fields: [skillId], references: [id])
  skillId         String?        @db.ObjectId
  MemberSkill     MemberSkill?   @relation(fields: [memberSkillId], references: [id])
  memberSkillId   String?        @db.ObjectId
  WorkWithSkill   WorkWithSkill? @relation(fields: [workWithSkillId], references: [id])
  workWithSkillId String?        @db.ObjectId
  WorkWith        WorkWith?      @relation(fields: [workWithId], references: [id])
  workWithId      String?        @db.ObjectId
  Position        Position?      @relation(fields: [positionId], references: [id])
  positionId      String?        @db.ObjectId
  Department      Department?    @relation(fields: [departmentId], references: [id])
  departmentId    String?        @db.ObjectId
  Role            Role?          @relation(fields: [roleId], references: [id])
  roleId          String?        @db.ObjectId
  Permission      Permission?    @relation(fields: [permissionId], references: [id])
  permissionId    String?        @db.ObjectId
  Member          Member?        @relation(fields: [memberId], references: [id])
  memberId        String?        @db.ObjectId
  Gallery         Gallery?       @relation(fields: [galleryId], references: [id])
  galleryId       String?        @db.ObjectId
  Setting         Setting?       @relation(fields: [settingId], references: [id])
  settingId       String?        @db.ObjectId
  OurWork         OurWork?       @relation(fields: [ourworkId], references: [id])
  ourworkId       String?        @db.ObjectId
  News            News?          @relation(fields: [newsId], references: [id])
  newsId          String?        @db.ObjectId
  Blog            Blog?          @relation(fields: [blogId], references: [id])
  blogId          String?        @db.ObjectId
  PackagePrice    PackagePrice?  @relation(fields: [packagePriceId], references: [id])
  packagePriceId  String?        @db.ObjectId
}

model Department {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  detail    String
  createdBy String
  createdAt DateTime   @default(now())
  updatedBy String?
  updatedAt DateTime   @updatedAt
  deletedBy String?
  deletedAt DateTime?  @map("deleted_at")
  deleted   Boolean    @default(false)
  Gallery   Gallery[]
  Position  Position[]
  AuditLog  AuditLog[]
}

model Position {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  createdBy    String
  createdAt    DateTime    @default(now())
  updatedBy    String?
  updatedAt    DateTime    @updatedAt
  deletedBy    String?
  deletedAt    DateTime?   @map("deleted_at")
  deleted      Boolean     @default(false)
  Department   Department? @relation(fields: [departmentId], references: [id])
  departmentId String?     @db.ObjectId
  member       Member[]
  AuditLog     AuditLog[]
}

model Gallery {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  alt          String
  how          String
  createdBy    String
  createdAt    DateTime    @default(now())
  updatedBy    String?
  updatedAt    DateTime    @updatedAt
  deletedBy    String?
  deletedAt    DateTime?   @map("deleted_at")
  deleted      Boolean     @default(false)
  Blog         Blog?       @relation(fields: [blogId], references: [id])
  blogId       String?     @db.ObjectId
  Member       Member?     @relation(fields: [memberId], references: [id])
  memberId     String?     @db.ObjectId
  Department   Department? @relation(fields: [departmentId], references: [id])
  departmentId String?     @db.ObjectId
  OurWork      OurWork?    @relation(fields: [ourWorkId], references: [id])
  ourWorkId    String?     @db.ObjectId
  Setting      Setting?    @relation(fields: [settingId], references: [id])
  settingId    String?     @db.ObjectId
  News         News?       @relation(fields: [newsId], references: [id])
  newsId       String?     @db.ObjectId
  Service      Service?    @relation(fields: [serviceId], references: [id])
  serviceId    String?     @db.ObjectId
  ImgList      ImgList?    @relation(fields: [ImgListId], references: [id])
  ImgListId    String?     @db.ObjectId
  AuditLog     AuditLog[]
}

model ImgList {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdBy String
  createdAt DateTime  @default(now())
  updatedBy String?
  updatedAt DateTime  @updatedAt
  deletedBy String?
  deletedAt DateTime? @map("deleted_at")
  deleted   Boolean   @default(false)
  Gallery   Gallery[]
}
